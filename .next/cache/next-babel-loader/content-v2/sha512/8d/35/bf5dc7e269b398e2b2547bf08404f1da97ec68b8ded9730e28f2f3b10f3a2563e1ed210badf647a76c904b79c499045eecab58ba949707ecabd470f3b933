{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Anton\\\\source\\\\repos\\\\nextjs-course\\\\pages\\\\[pid].js\";\nimport path from 'path';\nimport fs from 'fs/promises';\n\nfunction ProductDetailPage(props) {\n  const {\n    loadedProduct\n  } = props;\n\n  if (!loadedProduct) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: loadedProduct.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loadedProduct.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getStaticProps(context) {\n  const {\n    params\n  } = context;\n  const productId = params.pid;\n  const filePath = path.join(process.cwd(), 'data', 'dummy-backend.json');\n  const jsonData = await fs.readFile(filePath);\n  const data = JSON.parse(jsonData);\n  const product = data.products.find(product => product.id === productId);\n  return {\n    props: {\n      loadedProduct: product\n    }\n  };\n}\nexport async function getStaticPaths() {\n  return {\n    paths: [{\n      params: {\n        pid: 'p1'\n      }\n    }],\n    fallback: true\n  };\n}\nexport default ProductDetailPage;","map":{"version":3,"sources":["C:/Users/Anton/source/repos/nextjs-course/pages/[pid].js"],"names":["path","fs","ProductDetailPage","props","loadedProduct","title","description","getStaticProps","context","params","productId","pid","filePath","join","process","cwd","jsonData","readFile","data","JSON","parse","product","products","find","id","getStaticPaths","paths","fallback"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,EAAP,MAAe,aAAf;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAoBD,KAA1B;;AAEA,MAAI,CAACC,aAAL,EAAoB;AAChB,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;;AAED,sBACI;AAAA,4BACI;AAAA,gBAAKA,aAAa,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAID,aAAa,CAACE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH;;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAaD,OAAnB;AACA,QAAME,SAAS,GAAGD,MAAM,CAACE,GAAzB;AAEA,QAAMC,QAAQ,GAAGZ,IAAI,CAACa,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,MAAzB,EAAiC,oBAAjC,CAAjB;AAEA,QAAMC,QAAQ,GAAG,MAAMf,EAAE,CAACgB,QAAH,CAAYL,QAAZ,CAAvB;AACA,QAAMM,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAb;AAEA,QAAMK,OAAO,GAAGH,IAAI,CAACI,QAAL,CAAcC,IAAd,CAAmBF,OAAO,IAAIA,OAAO,CAACG,EAAR,KAAed,SAA7C,CAAhB;AAEA,SAAO;AACHP,IAAAA,KAAK,EAAE;AACHC,MAAAA,aAAa,EAAEiB;AADZ;AADJ,GAAP;AAKH;AAED,OAAO,eAAeI,cAAf,GAAgC;AACnC,SAAO;AACHC,IAAAA,KAAK,EAAE,CACH;AAAEjB,MAAAA,MAAM,EAAE;AAAEE,QAAAA,GAAG,EAAE;AAAP;AAAV,KADG,CADJ;AAIHgB,IAAAA,QAAQ,EAAE;AAJP,GAAP;AAMH;AAED,eAAezB,iBAAf","sourcesContent":["import path from 'path';\r\nimport fs from 'fs/promises';\r\n\r\nfunction ProductDetailPage(props) {\r\n    const { loadedProduct } = props;\r\n\r\n    if (!loadedProduct) {\r\n        return (<p>Loading...</p>);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>{loadedProduct.title}</h1>\r\n            <p>{loadedProduct.description}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const { params } = context;\r\n    const productId = params.pid;\r\n\r\n    const filePath = path.join(process.cwd(), 'data', 'dummy-backend.json');\r\n\r\n    const jsonData = await fs.readFile(filePath)\r\n    const data = JSON.parse(jsonData);\r\n\r\n    const product = data.products.find(product => product.id === productId);\r\n\r\n    return {\r\n        props: {\r\n            loadedProduct: product\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    return {\r\n        paths: [\r\n            { params: { pid: 'p1' } }\r\n        ],\r\n        fallback: true\r\n    };\r\n}\r\n\r\nexport default ProductDetailPage;"]},"metadata":{},"sourceType":"module"}