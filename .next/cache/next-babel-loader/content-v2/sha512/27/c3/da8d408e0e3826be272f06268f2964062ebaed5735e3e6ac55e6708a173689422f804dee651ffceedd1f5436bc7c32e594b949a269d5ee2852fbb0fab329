{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Anton\\\\source\\\\repos\\\\nextjs-course\\\\store\\\\notification-context.js\";\nimport { createContext, useState, useEffect } from 'react';\nconst NotificationContext = /*#__PURE__*/createContext({\n  notification: null,\n  // {title, message, status}\n  showNotification: function (notificationData) {},\n  hideNotification: function () {}\n});\nexport function NotificationContextProvider(props) {\n  const {\n    0: activeNotification,\n    1: setActiveNotification\n  } = useState();\n  useEffect(() => {\n    if (activeNotification && (activeNotification.status === 'success' || activeNotification.status === 'error')) {\n      const timer = setTimeout(() => {\n        setActiveNotification(null);\n      }, 3000);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [activeNotification]);\n\n  function showNotificationHandler(notificationData) {\n    setActiveNotification(notificationData);\n  }\n\n  function hideNotificationHandler() {\n    setActiveNotification(null);\n  }\n\n  const context = {\n    notification: activeNotification,\n    showNotification: showNotificationHandler,\n    hideNotification: hideNotificationHandler\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\nexport default NotificationContext;","map":{"version":3,"sources":["C:/Users/Anton/source/repos/nextjs-course/store/notification-context.js"],"names":["createContext","useState","useEffect","NotificationContext","notification","showNotification","notificationData","hideNotification","NotificationContextProvider","props","activeNotification","setActiveNotification","status","timer","setTimeout","clearTimeout","showNotificationHandler","hideNotificationHandler","context","children"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,MAAMC,mBAAmB,gBAAGH,aAAa,CAAC;AACtCI,EAAAA,YAAY,EAAE,IADwB;AAClB;AACpBC,EAAAA,gBAAgB,EAAE,UAAUC,gBAAV,EAA4B,CAAG,CAFX;AAGtCC,EAAAA,gBAAgB,EAAE,YAAY,CAAG;AAHK,CAAD,CAAzC;AAMA,OAAO,SAASC,2BAAT,CAAqCC,KAArC,EAA4C;AAC/C,QAAM;AAAA,OAACC,kBAAD;AAAA,OAAqBC;AAArB,MAA8CV,QAAQ,EAA5D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,kBAAkB,KACjBA,kBAAkB,CAACE,MAAnB,KAA8B,SAA9B,IACGF,kBAAkB,CAACE,MAAnB,KAA8B,OAFhB,CAAtB,EAEgD;AAC5C,YAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC3BH,QAAAA,qBAAqB,CAAC,IAAD,CAArB;AACH,OAFuB,EAErB,IAFqB,CAAxB;AAIA,aAAO,MAAM;AACTI,QAAAA,YAAY,CAACF,KAAD,CAAZ;AACH,OAFD;AAGH;AACJ,GAZQ,EAYN,CAACH,kBAAD,CAZM,CAAT;;AAcA,WAASM,uBAAT,CAAiCV,gBAAjC,EAAmD;AAC/CK,IAAAA,qBAAqB,CAACL,gBAAD,CAArB;AACH;;AAED,WAASW,uBAAT,GAAmC;AAC/BN,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACH;;AAED,QAAMO,OAAO,GAAG;AACZd,IAAAA,YAAY,EAAEM,kBADF;AAEZL,IAAAA,gBAAgB,EAAEW,uBAFN;AAGZT,IAAAA,gBAAgB,EAAEU;AAHN,GAAhB;AAMA,sBACI,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEC,OAArC;AAAA,cACKT,KAAK,CAACU;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAED,eAAehB,mBAAf","sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\n\r\nconst NotificationContext = createContext({\r\n    notification: null, // {title, message, status}\r\n    showNotification: function (notificationData) { },\r\n    hideNotification: function () { }\r\n});\r\n\r\nexport function NotificationContextProvider(props) {\r\n    const [activeNotification, setActiveNotification] = useState();\r\n\r\n    useEffect(() => {\r\n        if (activeNotification &&\r\n            (activeNotification.status === 'success' ||\r\n                activeNotification.status === 'error')) {\r\n            const timer = setTimeout(() => {\r\n                setActiveNotification(null)\r\n            }, 3000);\r\n\r\n            return () => {\r\n                clearTimeout(timer);\r\n            }\r\n        }\r\n    }, [activeNotification]);\r\n\r\n    function showNotificationHandler(notificationData) {\r\n        setActiveNotification(notificationData)\r\n    }\r\n\r\n    function hideNotificationHandler() {\r\n        setActiveNotification(null);\r\n    }\r\n\r\n    const context = {\r\n        notification: activeNotification,\r\n        showNotification: showNotificationHandler,\r\n        hideNotification: hideNotificationHandler\r\n    }\r\n\r\n    return (\r\n        <NotificationContext.Provider value={context}>\r\n            {props.children}\r\n        </NotificationContext.Provider>\r\n    );\r\n}\r\n\r\nexport default NotificationContext;"]},"metadata":{},"sourceType":"module"}